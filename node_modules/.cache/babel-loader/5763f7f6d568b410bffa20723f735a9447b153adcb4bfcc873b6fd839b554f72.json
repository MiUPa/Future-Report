{"ast":null,"code":"var _jsxFileName = \"/Users/Y.Miura/PycharmProjects/NeedsCatcher/src/components/ForecastView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, Select, MenuItem, FormControl, InputLabel, Grid } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction ForecastView({\n  categories,\n  salesData\n}) {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [chartData, setChartData] = useState(null);\n  const calculateForecast = data => {\n    if (!data || Object.keys(data).length === 0) return null;\n\n    // データを日付でソート\n    const sortedDates = Object.keys(data).sort();\n    const values = sortedDates.map(date => data[date]);\n\n    // 単純指数平滑法のパラメータ\n    const alpha = 0.2;\n    let forecast = values[0];\n    const forecasts = [forecast];\n\n    // 既存データの予測値を計算\n    for (let i = 1; i < values.length; i++) {\n      forecast = alpha * values[i] + (1 - alpha) * forecast;\n      forecasts.push(forecast);\n    }\n\n    // 将来3ヶ月分の予測\n    const futureMonths = 3;\n    const lastValue = forecast;\n    for (let i = 0; i < futureMonths; i++) {\n      forecasts.push(lastValue);\n    }\n\n    // 将来の日付を生成\n    const lastDate = new Date(sortedDates[sortedDates.length - 1]);\n    const futureDates = Array.from({\n      length: futureMonths\n    }, (_, i) => {\n      const date = new Date(lastDate);\n      date.setMonth(date.getMonth() + i + 1);\n      return date.toISOString().split('T')[0];\n    });\n    return {\n      labels: [...sortedDates, ...futureDates],\n      datasets: [{\n        label: '実績値',\n        data: [...values, ...Array(futureMonths).fill(null)],\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }, {\n        label: '予測値',\n        data: forecasts,\n        borderColor: 'rgb(255, 99, 132)',\n        borderDash: [5, 5],\n        tension: 0.1\n      }]\n    };\n  };\n  useEffect(() => {\n    if (selectedCategory && salesData[selectedCategory]) {\n      const newChartData = calculateForecast(salesData[selectedCategory]);\n      setChartData(newChartData);\n    }\n  }, [selectedCategory, salesData]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"\\u9700\\u8981\\u4E88\\u6E2C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedCategory,\n              label: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\",\n              onChange: e => setSelectedCategory(e.target.value),\n              children: categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: category,\n                children: category\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), chartData && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          height: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            plugins: {\n              title: {\n                display: true,\n                text: `${selectedCategory}の需要予測`\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(ForecastView, \"cfYO3svGzi2dZnitG6XxMobYW4o=\");\n_c = ForecastView;\nexport default ForecastView;\nvar _c;\n$RefreshReg$(_c, \"ForecastView\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Select","MenuItem","FormControl","InputLabel","Grid","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","ForecastView","categories","salesData","_s","selectedCategory","setSelectedCategory","chartData","setChartData","calculateForecast","data","Object","keys","length","sortedDates","sort","values","map","date","alpha","forecast","forecasts","i","push","futureMonths","lastValue","lastDate","Date","futureDates","Array","from","_","setMonth","getMonth","toISOString","split","labels","datasets","label","fill","borderColor","tension","borderDash","newChartData","sx","mb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","container","spacing","item","xs","sm","fullWidth","value","onChange","e","target","category","mt","height","options","responsive","maintainAspectRatio","scales","y","beginAtZero","plugins","title","display","text","_c","$RefreshReg$"],"sources":["/Users/Y.Miura/PycharmProjects/NeedsCatcher/src/components/ForecastView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Grid\n} from '@mui/material';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction ForecastView({ categories, salesData }) {\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [chartData, setChartData] = useState(null);\n\n  const calculateForecast = (data) => {\n    if (!data || Object.keys(data).length === 0) return null;\n\n    // データを日付でソート\n    const sortedDates = Object.keys(data).sort();\n    const values = sortedDates.map(date => data[date]);\n\n    // 単純指数平滑法のパラメータ\n    const alpha = 0.2;\n    let forecast = values[0];\n    const forecasts = [forecast];\n\n    // 既存データの予測値を計算\n    for (let i = 1; i < values.length; i++) {\n      forecast = alpha * values[i] + (1 - alpha) * forecast;\n      forecasts.push(forecast);\n    }\n\n    // 将来3ヶ月分の予測\n    const futureMonths = 3;\n    const lastValue = forecast;\n    for (let i = 0; i < futureMonths; i++) {\n      forecasts.push(lastValue);\n    }\n\n    // 将来の日付を生成\n    const lastDate = new Date(sortedDates[sortedDates.length - 1]);\n    const futureDates = Array.from({ length: futureMonths }, (_, i) => {\n      const date = new Date(lastDate);\n      date.setMonth(date.getMonth() + i + 1);\n      return date.toISOString().split('T')[0];\n    });\n\n    return {\n      labels: [...sortedDates, ...futureDates],\n      datasets: [\n        {\n          label: '実績値',\n          data: [...values, ...Array(futureMonths).fill(null)],\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        },\n        {\n          label: '予測値',\n          data: forecasts,\n          borderColor: 'rgb(255, 99, 132)',\n          borderDash: [5, 5],\n          tension: 0.1\n        }\n      ]\n    };\n  };\n\n  useEffect(() => {\n    if (selectedCategory && salesData[selectedCategory]) {\n      const newChartData = calculateForecast(salesData[selectedCategory]);\n      setChartData(newChartData);\n    }\n  }, [selectedCategory, salesData]);\n\n  return (\n    <Box sx={{ mb: 4 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        需要予測\n      </Typography>\n      <Paper elevation={2} sx={{ p: 2 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={3}>\n            <FormControl fullWidth>\n              <InputLabel>カテゴリー</InputLabel>\n              <Select\n                value={selectedCategory}\n                label=\"カテゴリー\"\n                onChange={(e) => setSelectedCategory(e.target.value)}\n              >\n                {categories.map((category) => (\n                  <MenuItem key={category} value={category}>\n                    {category}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        {chartData && (\n          <Box sx={{ mt: 2, height: 400 }}>\n            <Line\n              data={chartData}\n              options={{\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                },\n                plugins: {\n                  title: {\n                    display: true,\n                    text: `${selectedCategory}の需要予測`\n                  }\n                }\n              }}\n            />\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n}\n\nexport default ForecastView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}